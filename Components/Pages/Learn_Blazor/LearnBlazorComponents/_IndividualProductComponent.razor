<div class="bg-light border col-6" @onclick="ProdSelected">
    <h4 class="text-secondary">Product - @Product.Id</h4>
    <input type="checkbox" @onchange="FavoriteUpdated" /> Add to Favorites <br /><br />
    Name - @Product.Name
    <br />
    Show properties :
    <input type="checkbox" @bind="Product.IsActive" />

    @if (Product.IsActive)
    {
        @foreach (var prodProp in Product.ProductProperties)
        {
            <p>@prodProp.Key - @prodProp.Value</p>
        }
    }
    <br />
    <_DeleteButtonComponent ProductId="@Product.Id" />
</div>
@code {
    [Parameter]
    public Product Product { get; set; } = default!;
    [Parameter]
    public EventCallback<bool> OnFavoriteUpdated { get; set; }
    [Parameter]
    public EventCallback<string> OnSelectedProductChange { get; set; }

    public int CountFavorites { get; set; }

    private async Task FavoriteUpdated(ChangeEventArgs args)
    {
        if (args.Value is bool isFavorite)
        {
            await OnFavoriteUpdated.InvokeAsync(isFavorite);
        }
    }

    private void ProdSelected(MouseEventArgs args)
    {
        OnSelectedProductChange.InvokeAsync(Product.Name);
    }
}
