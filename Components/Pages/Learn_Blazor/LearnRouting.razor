@page "/LearnRouting"
@* @page "/LearnRouting/{Param1}"
@page "/LearnRouting/{Param1}/{Param2}" *@
@page "/LearnBlazor/LearnRouting"
@page "/LearnRouting/LearnBlazor"
@page "/LearnRouting/catch-all/{*PageParameters}"

@inject NavigationManager NavigationManager

<h3>LearnRouting</h3>
<p>Param1 : @Param1</p>
<p>Param2 : @Param2</p>
<p>PageParameters : @PageParameters</p>

@* <a href="learnRouting?Param1=Learn&Param2=Blazor" class="btn btn-primary">Navigate to query parameter</a> *@

<button @onclick="NavigateToQueryParam" class="btn btn-primary">Navigate to query parameter</button>
<button class="btn btn-success" @onclick="LoadParameters">Load Parameters</button>
<br />

<div class="bg-info" style="height:1000px"></div>

<h2 id="targetElement">Main Title</h2>

@code {
    [SupplyParameterFromQuery]
    public string Param1 { get; set; } = "";
    [SupplyParameterFromQuery]
    public string Param2 { get; set; } = "";
    [Parameter]
    public string PageParameters { get; set; } = "";

    private void LoadParameters()
    {
        var uri = new Uri(NavigationManager.Uri);
        var query = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        // var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        Param1 = query["Param1"];
        Param2 = query["Param2"];
        //NavigationManager.Refresh(forceReload:true);
    }

    private void NavigateToQueryParam()
    {
        //some calculations
        NavigationManager.NavigateTo("LearnRouting?Param1=Learn&Param2=Blazor");
    }
}
